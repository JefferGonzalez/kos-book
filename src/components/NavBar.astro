---
import { getSession } from 'auth-astro/server'

import { NAVBAR_PATHS } from '@/consts/paths'
import HamburgerIcon from '@/icons/Hamburger.astro'

const { pathname } = Astro.url

const isAuthPage = pathname === '/auth'

const session = await getSession(Astro.request)
---

<nav class="flex items-center justify-between sticky py-4 top-0 z-40">
  <a
    href="/"
    class="text-sm sm:text-base md:text-2xl font-bold text-[#193138] flex items-center gap-1"
    title="KOS'BOOK Logo"
  >
    <span class="sr-only">KOS'BOOK | Documentation Tool</span>
    KOS'BOOK | Documentation Tool
  </a>

  {
    !isAuthPage && !session?.user && (
      <Fragment>
        <div class="hidden sm:flex space-x-1">
          {NAVBAR_PATHS.map(({ name, path }) => (
            <a
              href={path}
              title={name}
              class="bg-ziggurat-950/95 hover:bg-ziggurat-950 text-xs sm:text-base md:text-lg rounded-lg px-2 py-1 transition-all duration-300 ease-in-out"
            >
              <span class="sr-only">{name}</span>
              {name}
            </a>
          ))}
        </div>
        <div class="sm:hidden">
          <button
            id="hamburger"
            class="focus:outline-none hover:bg-zinc-950 rounded-lg px-2 py-1 transition-all duration-300 ease-in-out"
          >
            <span class="sr-only">Menu</span>
            <HamburgerIcon />
          </button>
        </div>
      </Fragment>
    )
  }

  {
    session?.user && (
      <button
        id="sign-out"
        title="Cerrar sesi贸n"
        class="flex items-center gap-2 bg-ziggurat-950/95 text-xs sm:text-base md:text-lg hover:bg-ziggurat-950 rounded-lg px-2 py-1"
      >
        <img
          src={session.user.image}
          alt={session.user.name}
          title="Cerrar sesi贸n"
          class="size-6 rounded-full"
        />
        <span class="sr-only">Cerrar sesi贸n</span>
        Cerrar sesi贸n
      </button>
    )
  }
</nav>

<script>
  const { signOut } = await import('auth-astro/client')

  const hamburgerButton = document.getElementById('hamburger')
  const navLinks = document.querySelector('.sm\\:flex')
  const signOutButton = document.getElementById('sign-out')

  hamburgerButton?.addEventListener('click', () => {
    navLinks?.classList.toggle('hidden')
  })

  navLinks?.childNodes.forEach((link) => {
    link.addEventListener('click', () => {
      navLinks.classList.add('hidden')
    })
  })

  signOutButton?.addEventListener('click', async () => {
    await signOut()
  })
</script>
