---
import { MarkdownRenderer } from '@/components/MarkdownRenderer'
import DocsLayout from '@/layouts/DocsLayout.astro'
import { Toaster } from 'sonner'

const { kos } = Astro.params

const API_URL = import.meta.env.PUBLIC_API_URL

const response = await fetch(`${API_URL}/docs?name=${kos}`)

if (!response.ok && response.status === 404) {
  return Astro.redirect('/404')
}

const [data] = await response.json()

const projectName = data.name
const projectDescription = data.description

const modules = data.documentation.modules

const index = modules.find((module: any) => module.name === kos)

const otherModules = modules.filter((module: any) => module.name !== kos)
---

<DocsLayout
  title="Project Documentation"
  description="Documentation for the Counter App with Web Components project"
>
  <header class="mb-4 space-y-2">
    <h1
      class="text-3xl font-bold text-gray-900 dark:text-gray-100 sm:text-4xl md:text-5xl"
    >
      {projectName}
    </h1>
    <h4
      class="text-base text-gray-600 dark:text-gray-400 sm:text-lg md:text-xl text-pretty"
    >
      {projectDescription}
    </h4>
  </header>

  <hr />

  <section>
    {
      index.files.map((file: any) => (
        <Fragment>
          <article class="mt-4">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 sm:text-3xl md:text-4xl">
              Module: {file.name}
            </h2>

            <MarkdownRenderer client:idle content={file.description} />
          </article>

          <hr />
        </Fragment>
      ))
    }

    <hr />

    {
      otherModules.map((module: any) => (
        <Fragment>
          <article class="mt-4">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 sm:text-3xl md:text-4xl">
              Module: {module.name + '/' + module.files[0].name}
            </h2>

            <MarkdownRenderer
              client:idle
              content={module.files[0].description}
            />
          </article>

          <hr />
        </Fragment>
      ))
    }
  </section>

  <Toaster client:only="react" />
</DocsLayout>
